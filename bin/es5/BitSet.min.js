"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t};!function(t,e){var n=!0;switch(n){case"function"==typeof define&&t.define===define&&!!define.amd:define(e);break;case"object"===("undefined"==typeof module?"undefined":_typeof(module))&&t===module.exports:module.exports=e();break;case!t.BitSet:Object.defineProperty(t,"BitSet",{value:e(),enumerable:!0});break;default:console.error("'BitSet' is already defined on root object")}}(void 0,function(){function t(t){this.init(t)}function e(t,e){for(var n in e)if(e.hasOwnProperty(n)){var r=Object.getOwnPropertyDescriptor(e,n),i=r.value&&(r.value+"").match(/@aliases:(.*?);/),s=i?i[1].match(/[\w\$]+/g):[];s.unshift(n),s.forEach(function(e){Object.defineProperty(t,e,r)})}return t}t.info={name:"cell-bitset",version:"0.0.2",url:"https://github.com/unnoon/cell-bitset"};var n=32,r=5;return t.create=t.spawn=function(e){return Object.create(t.prototype).init(e)},e(t.prototype,{$create:t.create,$spawn:t.create,$hammingWeight:function(t){"@aliases: $popCount";return t-=t>>>1&1431655765|0,t=(858993459&t)+(t>>>2&858993459),16843009*(t+(t>>>4)&252645135)>>>24|0},$lsb:function(t){return this.$hammingWeight((t&-t)-1)},$msb:function(t){return t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,t=(t>>1)+1,this.$hammingWeight(t-1)},add:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];for(var r=e.length;r--;)this.set(e[r]);return this},get cardinality(){for(var t=0,e=0,n=this.words.length;e<n;e++)t+=this.$hammingWeight(this.words[e]);return 0|t},set cardinality(t){console.warn("Cardinality is read only")},clear:function(){for(var t=0,e=this.words.length;t<e;t++)this.words[t]=0;return this},clone:function e(){var e=Object.create(t.prototype);return e._length=0|this._length,e.words=new Uint32Array(this.words),e},complement:function(){for(var t=0,e=this.words.length;t<e;t++)this.words[t]=~this.words[t];return this.trimTrailingBits(),this},Complement:function(){return this.clone().complement()},contains:function(t){"@aliases: fits";for(var e,n=0,r=t.words.length;n<r;n++)if(e=t.words[n],((this.words[n]||0)&e)!==e)return!1;return!0},difference:function(t){for(var e=0,n=this.words.length;e<n;e++)this.words[e]&=~t.words[e];return this},Difference:function(t){return this.clone().difference(t)},each:function(t,e){for(var n,i,s=0,o=this.words.length;s<o;s++)for(n=this.words[s];0!==n;){if(i=n&-n|0,t.call(e,1,(s<<r)+this.$hammingWeight(i-1),this)===!1)return!1;n^=i}return!0},each$:function(t,e){for(var n=0,r=this._length;n<r;n++)if(t.call(e,this.get(n),n,this)===!1)return!1;return!0},equals:function(t){for(var e=0,n=this.words.length;e<n;e++)if(this.words[e]!==t.words[e])return!1;return!0},exclusion:function(t){"@aliases: symmetricDifference, xor";t.length>this._length&&this.resize(t.length);for(var e=0,n=t.words.length;e<n;e++)this.words[e]^=t.words[e];return this},Exclusion:function(t){"@aliases: SymmetricDifference, Xor";return this.clone().exclusion(t)},flip:function(t){return(t|=0)>=this._length&&this.resize(t+1),this.words[t>>>r]^=1<<t,this},get:function(t){return(t|=0)>=this._length?0:this.words[t>>>r]>>>t&1|0},has:function(t){"@aliases: isMember";return!!this.get(t)},init:function(t){var e=t&&t.length?t:[],r=0|((e.length?e[e.length-1]:t)||n);return Object.defineProperty(this,"_length",{value:r,writable:!0}),this.words=new Uint32Array(Math.ceil(this._length/n)),this.add.apply(this,e),this},intersection:function(t){"@aliases: and";for(var e=0,n=this.words.length;e<n;e++)this.words[e]&=t.words[e]||0;return this},Intersection:function(t){"@aliases: And";return this.clone().intersection(t)},intersects:function(t){for(var e=0,n=0|Math.min(this.words.length,t.words.length);e<n;e++)if(this.words[e]&t.words[e])return!0;return!1},isEmpty:function(){for(var t=0,e=this.words.length;t<e;t++)if(this.words[t])return!1;return!0},isSubsetOf:function(t){"@aliases: isContainedIn";return t.contains(this)},get length(){return 0|this._length},set length(t){console.warn("Length is read only")},max:function(){"@aliases: msb";for(var t,e=this.words.length;e--;)if(t=this.words[e])return(e<<r)+this.$msb(t)|0},min:function(){"@aliases: lsb";for(var t,e=0,n=this.words.length;e<n;e++)if(t=this.words[e])return(e<<r)+this.$lsb(t)|0},remove:function(t){for(var e=arguments.length;e--;)this.set(arguments[e],0);return this},resize:function(t){if(this._length===(t|=0))return this;var e,i=t-this._length|0,s=t-1+n>>>r|0;if(this._length=t,s!==this.words.length){e=new Uint32Array(s);for(var o=0,h=0|Math.min(s,this.words.length);o<h;o++)e[o]=this.words[o];this.words=e}return i<0&&this.trimTrailingBits(),this},set:function(t,e){return(t|=0)>=this._length&&0!==e&&this.resize(t+1),0===e?this.words[t>>>r]&=~(1<<t):this.words[t>>>r]|=1<<t,this},toArray:function(t){var e,n=0;switch(t){case 8:e=new Uint8Array(this.cardinality);break;case 16:e=new Uint16Array(this.cardinality);break;case 32:e=new Uint32Array(this.cardinality);break;default:e=[]}return this.each(function(t,r){e[n++]=r}),e},toBitArray:function(t){var e;switch(t){case 8:e=new Uint8Array(this._length);break;case 16:e=new Uint16Array(this._length);break;case 32:e=new Uint32Array(this._length);break;default:e=[]}return this.each$(function(t,n){e[n]=t}),e},toBooleanArray:function(){var t=[];return this.each$(function(e,n){t[n]=!!e}),t},toBitString:function(t){for(var e="",r=this.words.length;r--;)e+=("0000000000000000000000000000000"+this.words[r].toString(2)).slice(-n);return~t?e.slice(-this._length):e},toString:function(t){"@aliases: stringify";var e="";switch(t){case-1:case 2:e=this.toBitString(t);break;default:e+="{",this.each(function(t,n){e+=("{"!==e?", ":"")+n}),e+="}"}return e},trim:function(){return this.resize(this.max()+1)},trimTrailingBits:function(){var t=this.words.length,e=t*n-this._length;return this.words[t-1]=this.words[t-1]<<e>>>e,this},union:function(t){"@aliases: or";t.length>this._length&&this.resize(t.length);for(var e=0,n=t.words.length;e<n;e++)this.words[e]|=t.words[e];return this},Union:function(t){"@aliases: Or";return this.clone().union(t)}}),t});